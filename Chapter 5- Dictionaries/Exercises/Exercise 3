#Now that you know how to loop through a dictionary, clean up the code from Exercise 6-3 (page 99) by replacing your series of print()
#calls with a loop that runs through the dictionary’s keys and values. When you’re sure that your loop works, add five more Python terms 
#to your glossary.When you run your program again, these new words and meanings should automatically be included in the output.
# Create a dictionary to store a glossary of programming terms.
glossary = {
    'Variable': 'A storage location for data in a program, which can be used to store and manipulate information.',
    'Function': 'A reusable block of code that performs a specific task when called.',
    'Conditional Statement': 'A control structure that allows a program to make decisions based on certain conditions.',
    'Loop': 'A control structure that allows a program to execute a block of code repeatedly.',
    'List': 'A collection of items that can be of different data types, stored in a specific order and accessed by index.'
}

# Add five more Python terms and their meanings to the glossary.
glossary['Tuple'] = 'An ordered, immutable collection of elements, typically used for grouping data.'
glossary['Dictionary'] = 'A collection of key-value pairs used for storing and organizing data.'
glossary['Module'] = 'A Python file containing code and definitions that can be imported and used in other Python scripts.'
glossary['String'] = 'A sequence of characters, typically used for representing text.'
glossary['Exception'] = 'An event or condition that can interrupt the normal flow of a program and requires handling.'

# Loop through the glossary dictionary and print the terms and their meanings.
for term, meaning in glossary.items():
    print(f"{term}:\n{meaning}\n")


